% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gdal_rat.R
\name{buildRAT}
\alias{buildRAT}
\title{Build a basic GDAL Raster Attribute Table as data frame}
\usage{
buildRAT(
  raster,
  band = 1,
  col_names = c("VALUE", "COUNT"),
  table_type = "athematic",
  na_value = NULL
)
}
\arguments{
\item{raster}{Either a \code{GDALRaster} object, or a character string containing
the file name of a raster dataset to open.}

\item{band}{Integer scalar. Band number to read (default \code{1}).}

\item{col_names}{Character vector of length two containing names to use for
column 1 (pixel values) and column 2 (pixel counts) in the output data
frame (default \code{c("VALUE", "COUNT")}).}

\item{table_type}{A character string describing the type of the attribute
table. One of either \code{"thematic"}, or \code{"athematic"} for continuous data
(the default).}

\item{na_value}{Numeric scalar. An \code{NA} pixel value (if present) will be
recoded to \code{na_value} in the returned data frame. If \code{NULL} (the default),
\code{NA} will not be recoded.}
}
\value{
A data frame with two columns containing the set of unique pixel
values and their counts. The columns have attribute \code{"GFU"} set to \code{"MinMax"}
for the values and \code{"PixelCount"} for the counts. The data frame has
attribute \code{"GDALRATTableType"} set to \code{table_type} (see Details).
}
\description{
\code{buildRAT()} reads all pixels of the input raster to obtain the set of
unique values and their counts. The result is returned as a data frame
suitable for use with the class method \code{GDALRaster$setDefaultRAT()}. The
returned data frame might be further modified before setting as a default
RAT, for example, by adding columns containing class names, color values,
or other information (see Details).
}
\details{
A GDAL Raster Attribute Table (or RAT) provides attribute information about
pixel values. Raster attribute tables can be used to represent histograms,
color tables, and classification information. Each row in the table applies
to either a single pixel value or a range of values, and might have
attributes such as the histogram count for that range, the color that pixels
of that range should be displayed, names of classes, or any other generic
information.

Each column in a raster attribute table has a name, a type (integer,
floating point or string), and a \code{GDALRATFieldUsage}. The usage
distinguishes columns with particular understood purposes (such as color,
histogram count, name), and columns that have other purposes not understood
by the library (long label, e.g., wildfire_risk_category, etc).

In the general case, each row has a column indicating the minimum pixel
value falling into that category, and a column indicating the maximum pixel
value. In the GDAL API, these are indicated with usage values of \code{GFU_Min}
and \code{GFU_Max}. In other cases where each row is a discrete pixel value, one
column of usage \code{GFU_MinMax} would be used. In R, the table is represented
as a data frame with column attribute \code{"GFU"} containing the field usage as
a string, \code{"Max"}, \code{"Min"} or \code{"MinMax"} (case-sensitive).
The full set of possible field usage descriptors is:
\tabular{lll}{
GFU attr       \tab GDAL enum        \tab Description\cr
\code{"Generic"}    \tab \code{GFU_Generic}    \tab General purpose field\cr
\code{"PixelCount"} \tab \code{GFU_PixelCount} \tab Histogram pixel count\cr
\code{"Name"}       \tab \code{GFU_Name}       \tab Class name\cr
\code{"Min"}        \tab \code{GFU_Min}        \tab Class range minimum\cr
\code{"Max"}        \tab \code{GFU_Max}        \tab Class range maximum\cr
\code{"MinMax"}     \tab \code{GFU_MinMax}     \tab Class value (min=max)\cr
\code{"Red"}        \tab \code{GFU_Red}        \tab Red class color (0-255)\cr
\code{"Green"}      \tab \code{GFU_Green}      \tab Green class color (0-255)\cr
\code{"Blue"}       \tab \code{GFU_Blue}       \tab Blue class color (0-255)\cr
\code{"Alpha"}      \tab \code{GFU_Alpha}      \tab Alpha transparency (0-255)\cr
\code{"RedMin"}     \tab \code{GFU_RedMin}     \tab Color range red minimum\cr
\code{"GreenMin"}   \tab \code{GFU_GreenMin}   \tab Color range green minimum\cr
\code{"BlueMin"}    \tab \code{GFU_BlueMin}    \tab Color range blue minimum\cr
\code{"AlphaMin"}   \tab \code{GFU_AlphaMin}   \tab Color range alpha minimum\cr
\code{"RedMax"}     \tab \code{GFU_RedMax}     \tab Color range red maximum\cr
\code{"GreenMax"}   \tab \code{GFU_GreenMax}   \tab Color range green maximum\cr
\code{"BlueMax"}    \tab \code{GFU_BlueMax}    \tab Color range blue maximum\cr
\code{"AlphaMax"}   \tab \code{GFU_AlphaMax}   \tab Color range alpha maximum
}

In other cases all the categories are of equal size and regularly spaced,
and the categorization can be determined by knowing the value at which
the categories start and the size of a category. This is called
"Linear Binning" and the information is kept specially on the raster
attribute table as a whole. In R, an attribute table that uses linear
binning would have the following attributes set on the data frame:
attr \code{"Row0Min"} = numeric lower bound (pixel value) of the first category,
and attr \code{"BinSize"} = numeric width of each category (in pixel value
units).

A raster attribute table is thematic or athematic (continuous). In R, the
data frame has an attribute named \code{"GDALRATTableType"} with string value of
either \code{"thematic"} or \code{"athematic"}.
}
\note{
The full raster will be scanned.

If \code{na_value} is not specified, then the \code{NA} pixel value (if present)
will not be recoded in the output data frame. This may have implications
if joining to other data (\code{NA} will not match), or when using the returned
data frame to set a default RAT on a dataset (\code{NA} will be interpreted
as the internal value that R uses to represent it for the type, e.g.,
-2147483648 for integer).
}
\examples{
evt_file <- system.file("extdata/storml_evt.tif", package="gdalraster")
# make a copy to modify
f <- paste0(tempdir(), "/", "storml_evt_tmp.tif")
file.copy(evt_file,  f)

ds <- new(GDALRaster, f, read_only=FALSE)
ds$getDefaultRAT(band=1) # NULL

df <- buildRAT(ds, table_type = "thematic", na_value = -9999)
attributes(df)
attributes(df$VALUE)
attributes(df$COUNT)

# get the full attribute table for LANDFIRE EVT from the CSV file
evt_csv <- system.file("extdata/LF20_EVT_220.csv", package="gdalraster")
evt_tbl <- read.csv(evt_csv)
head(evt_tbl)
evt_tbl <- evt_tbl[,1:7]

df <- merge(df, evt_tbl)
head(df)

# set column attributes for GDAL field usage
attr(df$EVT_NAME, "GFU") <- "Name"
attr(df$EVT_LF, "GFU") <- "Generic"
attr(df$EVT_PHYS, "GFU") <- "Generic"
attr(df$R, "GFU") <- "Red"
attr(df$G, "GFU") <- "Green"
attr(df$B, "GFU") <- "Blue"

ds$setDefaultRAT(band=1, df)
ds$flushCache()

df2 <- ds$getDefaultRAT(band=1)
head(df2)

ds$close()
}
\seealso{
\code{\link[=GDALRaster]{GDALRaster$getDefaultRAT()}},
\code{\link[=GDALRaster]{GDALRaster$setDefaultRAT()}}
}
