% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gdal_mdim.R
\name{mdim_as_classic}
\alias{mdim_as_classic}
\title{Return a view of an MDArray as a "classic" GDALDataset (i.e., 2D)}
\usage{
mdim_as_classic(
  filename,
  array_name,
  idx_xdim,
  idx_ydim,
  read_only = TRUE,
  group_name = NULL,
  allowed_drivers = NULL,
  open_options = NULL
)
}
\arguments{
\item{filename}{Character string giving the data source name of the
multidimensional raster (e.g., file, VSI path).}

\item{array_name}{Character string giving the name of the MDarray in
\code{filename}.}

\item{idx_xdim}{Integer value giving the index of the dimension that will be
used as the X/width axis (0-based).}

\item{idx_ydim}{Integer value giving the index of the dimension that will be
used as the Y/height axis (0-based).}

\item{read_only}{Logical value, \code{TRUE} to open the dataset in read-only mode
(the default).}

\item{group_name}{Optional character string giving the fully qualified name
of a group containing \code{array_name}.}

\item{allowed_drivers}{Optional character vector of driver short names that
must be considered. By default, all known multidimensional raster drivers are
considered.}

\item{open_options}{Optional character vector of format-specific dataset open
options as \code{"NAME=VALUE"} pairs.}
}
\value{
An object of class \code{GDALRaster}.
}
\description{
\code{mdim_as_classic()} returns a 2D raster view on an MDArray in a GDAL
Multidimensional Raster dataset, as an object of class \code{GDALRaster}. Only 2D
or more arrays are supported. In the case of > 2D arrays,additional
dimensions will be represented as raster bands. Requires GDAL >= 3.2.
}
\note{
The indexing of array dimensions is 0-based to be consistent with the
\verb{<ARRAY-SPEC>} notation that may be used with GDAL CLI commands, e.g.,
\code{gdal_usage("mdim convert")} (requires GDAL > 3.11.3).
See \url{https://gdal.org/en/stable/programs/gdal_mdim_convert.html}.

Once the returned \code{GDALRaster} object has been closed, it cannot be re-opened
with its \verb{$open()} method.
}
\examples{
f <- system.file("extdata/byte.nc", package="gdalraster")
mdim_info(f) |> writeLines()

(ds <- mdim_as_classic(f, "Band1", 1, 0))

plot_raster(ds, interpolate = FALSE, legend = TRUE, main = "byte.nc")

ds$close()
}
\seealso{
\code{\link[=GDALRaster]{GDALRaster-class}}, \code{\link[=mdim_info]{mdim_info()}}
}
